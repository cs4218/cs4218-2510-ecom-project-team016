// This was generated by ChatGPT based on the original code and the following instruction:
// "help me write unit tests for this component:"
// Edits were made to fix issues and improve coverage 
import React from "react";
import { render, screen } from "@testing-library/react";
import Dashboard from "client/src/pages/user/Dashboard";
import { useAuth } from "client/src/context/auth";
import UserMenu from "client/src/components/UserMenu";

// Mock the modules used by Dashboard
jest.mock('client/src/context/auth', () => ({
    useAuth: jest.fn(() => [null, jest.fn()]) // Mock useAuth hook to return null state and a mock function for setAuth
}));

jest.mock("client/src/components/Layout", () => ({ children }) => (
    <div data-testid="mock-layout">Mocked Layout {children}</div>
));

jest.mock("client/src/components/UserMenu", () => () => (
  <div data-testid="mock-user-menu">User Menu</div>
));

describe("Dashboard Component", () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  it("renders user info when authenticated", () => {
    // Mock authentication context
    useAuth.mockReturnValue([
      {
        user: {
          name: "John Doe",
          email: "john@example.com",
          address: "123 Main Street",
        },
      },
    ]);

    render(<Dashboard />);

    // Verify Layout and UserMenu render
    expect(screen.getByTestId("mock-layout")).toBeInTheDocument();
    expect(screen.getByTestId("mock-user-menu")).toBeInTheDocument();

    // Verify user info is displayed
    expect(screen.getByText("John Doe")).toBeInTheDocument();
    expect(screen.getByText("john@example.com")).toBeInTheDocument();
    expect(screen.getByText("123 Main Street")).toBeInTheDocument();
  });

  it("renders gracefully when user is not logged in", () => {
    useAuth.mockReturnValue([{}]); // no user data

    render(<Dashboard />);

    // Should render layout and menu, but not user info
    expect(screen.getByTestId("mock-layout")).toBeInTheDocument();
    expect(screen.getByTestId("mock-user-menu")).toBeInTheDocument();

    // No user info displayed
    expect(screen.queryByText(/@/)).not.toBeInTheDocument();
  });
});
