// This was generated by ChatGPT based on the provided code and instructions.
import React from "react";
import { render, screen } from "@testing-library/react";
import AdminDashboard from "client/src/pages/admin/AdminDashboard";
import { useAuth } from "client/src/context/auth";

// Mock components
jest.mock("client/src/components/AdminMenu", () => () => <div>Mocked AdminMenu</div>);
jest.mock("client/src/components/Layout", () => ({ children }) => (
  <div>Mocked Layout {children}</div>
));

// Mock useAuth
jest.mock("client/src/context/auth");

describe("AdminDashboard", () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  test("renders admin details when user is available", () => {
    useAuth.mockReturnValue([
      {
        user: {
          name: "Alice",
          email: "alice@example.com",
          phone: "1234567890",
        },
      },
    ]);

    render(<AdminDashboard />);

    expect(screen.getByText(/Admin Name : Alice/i)).toBeInTheDocument();
    expect(screen.getByText(/Admin Email : alice@example.com/i)).toBeInTheDocument();
    expect(screen.getByText(/Admin Contact : 1234567890/i)).toBeInTheDocument();

    // also check mocked components
    expect(screen.getByText("Mocked AdminMenu")).toBeInTheDocument();
    expect(screen.getByText(/Mocked Layout/)).toBeInTheDocument();
  });

  test("renders without crashing when user is missing", () => {
    useAuth.mockReturnValue([{}]); // no user object

    render(<AdminDashboard />);

    expect(screen.getByText(/Admin Name :/i)).toBeInTheDocument();
    expect(screen.getByText(/Admin Email :/i)).toBeInTheDocument();
    expect(screen.getByText(/Admin Contact :/i)).toBeInTheDocument();

    // also check mocked components
    expect(screen.getByText("Mocked AdminMenu")).toBeInTheDocument();
    expect(screen.getByText(/Mocked Layout/)).toBeInTheDocument();
  });

  test("renders without crashing when user is missing fields", () => {
    useAuth.mockReturnValue([
        {
        user: {
          name: "Alice",
          email: "alice@example.com",
        },
      },
    ]); // no user object

    render(<AdminDashboard />);

    expect(screen.getByText(/Admin Name : Alice/i)).toBeInTheDocument();
    expect(screen.getByText(/Admin Email : alice@example.com/i)).toBeInTheDocument();
    expect(screen.getByText(/Admin Contact :/i)).toBeInTheDocument();

    // also check mocked components
    expect(screen.getByText("Mocked AdminMenu")).toBeInTheDocument();
    expect(screen.getByText(/Mocked Layout/)).toBeInTheDocument();
  });
});
