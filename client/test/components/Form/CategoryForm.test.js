// This was generated by ChatGPT based on the original code and the following instruction:
// "help me write unit tests for this component:"
// There was some edits to fix minor issues.
import React from "react";
import { render, screen, fireEvent } from "@testing-library/react";
import CategoryForm from "client/src/components/Form/CategoryForm";

describe("CategoryForm", () => {
  let handleSubmit, setValue;

  beforeEach(() => {
    handleSubmit = jest.fn();
    setValue = jest.fn();
  });

  test("renders input and button", () => {
    render(
      <CategoryForm handleSubmit={handleSubmit} value="" setValue={setValue} />
    );

    expect(
      screen.getByPlaceholderText(/Enter new category/i)
    ).toBeInTheDocument();
    expect(screen.getByRole("button", { name: /submit/i })).toBeInTheDocument();
  });

  test("input shows the provided value", () => {
    render(
      <CategoryForm
        handleSubmit={handleSubmit}
        value="Books"
        setValue={setValue}
      />
    );

    expect(screen.getByDisplayValue("Books")).toBeInTheDocument();
  });

  test("calls setValue on input change", () => {
    render(
      <CategoryForm handleSubmit={handleSubmit} value="" setValue={setValue} />
    );

    fireEvent.change(screen.getByPlaceholderText(/Enter new category/i), {
      target: { value: "New Category" },
    });

    expect(setValue).toHaveBeenCalledWith("New Category");
  });

  test("calls handleSubmit on form submit", () => {
    render(
      <CategoryForm handleSubmit={handleSubmit} value="" setValue={setValue} />
    );

    fireEvent.submit(screen.getByRole("button", { name: /Submit/i }));

    expect(handleSubmit).toHaveBeenCalled();
  });
});
