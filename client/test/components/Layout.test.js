// This was generated by ChatGPT based on the original code and the following instruction:
// "help me write unit tests for this component:"
// There was some edits to fix minor issues.
import React from "react";
import { render, screen, waitFor } from "@testing-library/react";
import Layout from "client/src/components/Layout";
import { MemoryRouter } from "react-router-dom";

jest.mock("client/src/components/Header", () => () => <div>MockHeader</div>);
jest.mock("client/src/components/Footer", () => () => <div>MockFooter</div>);

// Disable the lint rule for direct DOM access in tests as there is no way around it
/* eslint-disable testing-library/no-node-access */
const getMetaContent = (name) => {
  return document.querySelector(`meta[name="${name}"]`)?.content;
};
/* eslint-enable testing-library/no-node-access */

describe("Layout Component", () => {
  const setup = (props) =>
    render(
      <MemoryRouter>
        <Layout {...props}>Test Children</Layout>
      </MemoryRouter>
    );

  test("renders title and children", async () => {
    setup({ title: "Test Title" });
    await waitFor(() => {
      expect(document.title).toBe("Test Title");
    });
    expect(screen.getByText("Test Children")).toBeInTheDocument();
  });

  test("renders meta tags", async () => {
    setup({ description: "desc", keywords: "key", author: "auth" });
    await waitFor(() => {
      expect(getMetaContent("description")).toBe("desc");
    });

    await waitFor(() => {
      expect(getMetaContent("keywords")).toBe("key");
    });

    await waitFor(() => {
      expect(getMetaContent("author")).toBe("auth");
    });
  });

  test("renders header and footer", () => {
    setup();
    expect(screen.getByText("MockHeader")).toBeInTheDocument();
    expect(screen.getByText("MockFooter")).toBeInTheDocument();
  });
});
